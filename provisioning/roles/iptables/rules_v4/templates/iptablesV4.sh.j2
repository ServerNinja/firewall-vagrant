#!/bin/bash
#############################
# Iptables Script for Firewall / Router / Gateway
# Generated by ansible
#############################
# Color definitions for output
GREEN=`tput setaf 2`
YELLOW=`tput setaf 3`
RESET=`tput sgr0`

log_info() {
  echo -e "$GREEN[INFO]: $@ $RESET"
}

log_warning() {
  echo -e "$YELLOW[WARN]: $@ $RESET"
}
#############################
# Network Configurations
# WAN Configuration
export WAN_IF={{ fw_wan_if }}
{% if fw_wan_if2 != "" %}
export WAN_IF2={{ fw_wan_if2 }}
{% endif %}

{% if fw_office_net_enabled %}
# Office
export OFFICE_NET_IF={{ fw_office_if }}
export OFFICE_NET_IP={{ fw_office_address }}
export OFFICE_NET_CIDR={{ fw_office_net_cidr }}
export OFFICE_NET_MASK={{ fw_office_netmask }}

{% endif %}
{% if fw_server_net_enabled %}
# Server
export SERVER_NET_IF={{ fw_server_if }}
export SERVER_NET_IP={{ fw_server_address }}
export SERVER_NET_CIDR={{ fw_server_net_cidr }}
export SERVER_NET_MASK={{ fw_server_netmask }}

{% endif %}
{% if fw_family_net_enabled %}
# Family / Guest
export FAMILY_NET_IF={{ fw_family_if }}
export FAMILY_NET_IP={{ fw_family_address }}
export FAMILY_NET_CIDR={{ fw_family_net_cidr }}
export FAMILY_NET_MASK={{ fw_family_netmask }}

{% endif %}
{% if fw_dmz_net_enabled %}
# DMZ
export DMZ_NET_IF={{ fw_dmz_if }}
export DMZ_NET_IP={{ fw_dmz_address }}
export DMZ_NET_CIDR={{ fw_dmz_net_cidr }}
export DMZ_NET_MASK={{ fw_dmz_netmask }}

{% endif %}
# Commands
export TC=/usr/sbin/tc
export MODPROBE=/usr/sbin/modprobe
export IPTABLES=/usr/sbin/iptables
export IPTABLES_SAVE=/usr/sbin/iptables-save

{% if fw_tc_enabled | default(false) %}
#############################
# Traffic Control (tc) settings
# Max allotted bandwidth by default
MAX_CEIL=100mbit

# Priority 0:  100mbit --- 100mbit
# Priority 1:   30mbit --- 50mbit
    PRI1_MIN=30mbit
    PRI1_MAX=50mbit
# Priority 2:   10mbit --- 20mbit
    PRI2_MIN=10mbit
    PRI2_MAX=20mbit
# Priority 3:    1mbit --- 5mbit
    PRI3_MIN=1mbit
    PRI3_MAX=5mbit
# Priority 4: 600kbit  --- 900kbit
    PRI4_MIN=600kbit
    PRI4_MAX=900kbit
# Priority 5: 100kbit  --- 500kbit
    PRI5_MIN=100kbit
    PRI5_MAX=500kbit

$MODPROBE sch_htb

{% if fw_office_net_enabled and fw_office_tc_enabled | default(False) %}
# OFFICE IF
log_info "Traffic Control (TC) for Office Net"
$TC qdisc del dev $OFFICE_NET_IF root
$TC qdisc add dev $OFFICE_NET_IF root handle 1: htb default 13
$TC class add dev $OFFICE_NET_IF parent 1: classid 1:1 htb rate $MAX_CEIL ceil $MAX_CEIL
$TC class add dev $OFFICE_NET_IF parent 1: classid 1:10 htb rate $MAX_CEIL ceil $MAX_CEIL prio 0
$TC class add dev $OFFICE_NET_IF parent 1: classid 1:11 htb rate $PRI1_MIN ceil $PRI1_MAX prio 1
$TC class add dev $OFFICE_NET_IF parent 1: classid 1:12 htb rate $PRI2_MIN ceil $PRI2_MAX prio 2
$TC class add dev $OFFICE_NET_IF parent 1: classid 1:13 htb rate $PRI3_MIN ceil $PRI3_MAX prio 3
$TC class add dev $OFFICE_NET_IF parent 1: classid 1:14 htb rate $PRI4_MIN ceil $PRI4_MAX prio 4
$TC class add dev $OFFICE_NET_IF parent 1: classid 1:15 htb rate $PRI5_MIN ceil $PRI5_MAX prio 5
$TC -g class show dev $OFFICE_NET_IF
{% endif %}
{% if fw_server_net_enabled and fw_server_tc_enabled | default(True)%}
# SERVER IF
log_info "Traffic Control (TC) for Server Net"
$TC qdisc del dev $SERVER_NET_IF root
$TC qdisc add dev $SERVER_NET_IF root handle 1: htb default 13
$TC class add dev $SERVER_NET_IF parent 1: classid 1:1 htb rate $MAX_CEIL ceil $MAX_CEIL
$TC class add dev $SERVER_NET_IF parent 1: classid 1:10 htb rate $MAX_CEIL ceil $MAX_CEIL prio 0
$TC class add dev $SERVER_NET_IF parent 1: classid 1:11 htb rate $PRI1_MIN ceil $PRI1_MAX prio 1
$TC class add dev $SERVER_NET_IF parent 1: classid 1:12 htb rate $PRI2_MIN ceil $PRI2_MAX prio 2
$TC class add dev $SERVER_NET_IF parent 1: classid 1:13 htb rate $PRI3_MIN ceil $PRI3_MAX prio 3
$TC class add dev $SERVER_NET_IF parent 1: classid 1:14 htb rate $PRI4_MIN ceil $PRI4_MAX prio 4
$TC class add dev $SERVER_NET_IF parent 1: classid 1:15 htb rate $PRI5_MIN ceil $PRI5_MAX prio 5
$TC -g class show dev $SERVER_NET_IF
{% endif %}
{% if fw_family_net_enabled and fw_family_tc_enabled | default(True) %}
# FAMILY IF
log_info "Traffic Control (TC) for Family Net"
$TC qdisc del dev $FAMILY_NET_IF root
$TC qdisc add dev $FAMILY_NET_IF root handle 1: htb default 13
$TC class add dev $FAMILY_NET_IF parent 1: classid 1:1 htb rate $MAX_CEIL ceil $MAX_CEIL
$TC class add dev $FAMILY_NET_IF parent 1: classid 1:10 htb rate $MAX_CEIL ceil $MAX_CEIL prio 0
$TC class add dev $FAMILY_NET_IF parent 1: classid 1:11 htb rate $PRI1_MIN ceil $PRI1_MAX prio 1
$TC class add dev $FAMILY_NET_IF parent 1: classid 1:12 htb rate $PRI2_MIN ceil $PRI2_MAX prio 2
$TC class add dev $FAMILY_NET_IF parent 1: classid 1:13 htb rate $PRI3_MIN ceil $PRI3_MAX prio 3
$TC class add dev $FAMILY_NET_IF parent 1: classid 1:14 htb rate $PRI4_MIN ceil $PRI4_MAX prio 4
$TC class add dev $FAMILY_NET_IF parent 1: classid 1:15 htb rate $PRI5_MIN ceil $PRI5_MAX prio 5
$TC -g class show dev $FAMILY_NET_IF
{% endif %}
{% endif %}

#############################
log_info "Configuring kernel routing / forwarding"
sed -i -e 's/^#net\.ipv4\.ip_forward.*/net.ipv4.ip_forward=1/' /etc/sysctl.conf
bash -c "echo 1 > /proc/sys/net/ipv4/ip_forward"     

#############################
log_info "Kernel mods for firewalling"
# load connection-tracking modules
$MODPROBE ip_conntrack
$MODPROBE iptable_nat
$MODPROBE ip_conntrack_ftp
$MODPROBE ip_nat_ftp

#############################
log_warning "IPTABLES - temporary configure default ACCEPT on tables and flush"

# Temporary open up
$IPTABLES -P INPUT ACCEPT
$IPTABLES -P OUTPUT ACCEPT
$IPTABLES -P FORWARD ACCEPT

# Flush all rules / delete chains
$IPTABLES --flush
$IPTABLES -X

# Flush all rules / delete chains - nat table
$IPTABLES --table nat --flush
$IPTABLES --table nat -X

# Flush all rules / delete chains - mangle table
$IPTABLES --table mangle --flush
$IPTABLES --table mangle -X

# Set up IP NAT / Masquerading on WAN port
$IPTABLES --table nat --append POSTROUTING --out-interface ${WAN_IF} -j MASQUERADE
{% if fw_wan_if2 != "" %}
$IPTABLES --table nat --append POSTROUTING --out-interface ${WAN_IF2} -j MASQUERADE
{% endif %}
#############################
log_info "IPTABLES - Connection State Tracking configs"
# INPUT
$IPTABLES -A INPUT -m state --state INVALID -j LOG --log-prefix "DROP INVALID " --log-ip-options --log-tcp-options
$IPTABLES -A INPUT -m state --state INVALID -j DROP
$IPTABLES -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT

# OUTPUT
$IPTABLES -A OUTPUT -m state --state INVALID -j LOG --log-prefix "DROP INVALID " --log-ip-options --log-tcp-options  
$IPTABLES -A OUTPUT -m state --state INVALID -j DROP  
$IPTABLES -A OUTPUT -m state --state ESTABLISHED,RELATED -j ACCEPT

# FORWARD
$IPTABLES -A FORWARD -m conntrack --ctstate INVALID -j LOG --log-prefix "DROP INVALID " --log-ip-options --log-tcp-options
$IPTABLES -A FORWARD -m conntrack --ctstate INVALID -j DROP
$IPTABLES -A FORWARD -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT

#############################
## Allow ssh
{% if fw_ssh_from_wan_net_enabled %}
$IPTABLES -A INPUT -p tcp -i $WAN_IF --dport 22 --syn -m state --state NEW -j ACCEPT
{% if fw_wan_if2 != "" %}
$IPTABLES --table nat --append POSTROUTING --out-interface ${WAN_IF} -j MASQUERADE
{% endif %}
{% endif %}
{% if fw_office_net_enabled and fw_ssh_from_office_net_enabled %}
$IPTABLES -A INPUT -p tcp -i $OFFICE_NET_IF -s $OFFICE_NET_CIDR --dport 22 --syn -m state --state NEW -j ACCEPT
{% endif %}
{% if fw_family_net_enabled and fw_ssh_from_family_net_enabled %}
$IPTABLES -A INPUT -p tcp -i $FAMILY_NET_IF -s $FAMILY_NET_CIDR --dport 22 --syn -m state --state NEW -j ACCEPT
{% endif %}
{% if fw_server_net_enabled and fw_ssh_from_server_net_enabled %}
$IPTABLES -A INPUT -p tcp -i $SERVER_NET_IF -s $SERVER_NET_CIDR --dport 22 --syn -m state --state NEW -j ACCEPT
{% endif %}
{% if fw_dmz_net_enabled and fw_ssh_from_dmz_net_enabled %}
$IPTABLES -A INPUT -p tcp -i $DMZ_NET_IF -s $DMZ_NET_CIDR --dport 22 --syn -m state --state NEW -j ACCEPT
{% endif %}

#############################
log_info "IPTABLES - Configure dfault DROP"
$IPTABLES -P INPUT DROP
$IPTABLES -P OUTPUT DROP
$IPTABLES -P FORWARD DROP

##############################
log_info "IPTABLES - INPUT rules for inter-process communication"

## dhcpd to named (via rndc on port 953 for dynamic updates)
$IPTABLES -N LO-OUTPUT-LO
$IPTABLES -N LO-INPUT-LO

# Fix issue with logins: gpg: keyserver refresh failed: No dirmngr
$IPTABLES -A LO-OUTPUT-LO -p tcp --dport 9150 -m state --state NEW -j ACCEPT
$IPTABLES -A LO-OUTPUT-LO -p tcp --dport 9050 -m state --state NEW -j ACCEPT
$IPTABLES -A LO-INPUT-LO -p tcp --dport 9150 -m state --state NEW -j ACCEPT
$IPTABLES -A LO-INPUT-LO -p tcp --dport 9050 -m state --state NEW -j ACCEPT

{% if fw_dhcp_server and fw_dns_server %}
# Allow for dynamic DNS updates
$IPTABLES -A LO-OUTPUT-LO -p tcp --dport 953 -m state --state NEW -j ACCEPT
$IPTABLES -A LO-OUTPUT-LO -p udp --dport 953 -m state --state NEW -j ACCEPT
$IPTABLES -A LO-INPUT-LO -p tcp --dport 953 -m state --state NEW -j ACCEPT
$IPTABLES -A LO-INPUT-LO -p udp --dport 953 -m state --state NEW -j ACCEPT
{% endif %}

# Allow DNS Queries
$IPTABLES -A LO-OUTPUT-LO -p tcp --dport 53 -m state --state NEW -j ACCEPT
$IPTABLES -A LO-OUTPUT-LO -p udp --dport 53 -m state --state NEW -j ACCEPT
$IPTABLES -A LO-INPUT-LO -p tcp --dport 53 -m state --state NEW -j ACCEPT
$IPTABLES -A LO-INPUT-LO -p udp --dport 53 -m state --state NEW -j ACCEPT

##############################
#log_info "IPTABLES - Outbound rules for this machine"
#### ACCEPT rules for allowing connections out (from local)
# SSH
$IPTABLES -A OUTPUT -p tcp --dport 22 --syn -m state --state NEW -j ACCEPT
{% if fw_outbound_ftp | default(true) %}
# FTP
$IPTABLES -A OUTPUT -p tcp --dport 21 --syn -m state --state NEW -j ACCEPT
{% endif %}
{% if fw_outbound_smtp | default(true) %}
# SMTP
$IPTABLES -A OUTPUT -p tcp --dport 25 --syn -m state --state NEW -j ACCEPT
{% endif %}
{% if fw_outbound_http | default(true) %}
# Http Queries
$IPTABLES -A OUTPUT -p tcp --dport 80 --syn -m state --state NEW -j ACCEPT
$IPTABLES -A OUTPUT -p tcp --dport 8080 --syn -m state --state NEW -j ACCEPT
$IPTABLES -A OUTPUT -p tcp --dport 443 --syn -m state --state NEW -j ACCEPT
$IPTABLES -A OUTPUT -p tcp --dport 8443 --syn -m state --state NEW -j ACCEPT
{% endif %}
{% if fw_outbound_dns | default(true) %}
# Whois Lookups...
$IPTABLES -A OUTPUT -p tcp --dport 43 --syn -m state --state NEW -j ACCEPT
$IPTABLES -A OUTPUT -p tcp --dport 4321 --syn -m state --state NEW -j ACCEPT
# DNS Queries...
$IPTABLES -A OUTPUT -p udp -m udp --dport 53 -m state --state NEW -j ACCEPT
$IPTABLES -A OUTPUT -p tcp -m tcp --dport 53 -m state --state NEW -j ACCEPT
{% endif %}
{% if fw_outbound_dhcp | default(true) %}
# DHCP Queries...
$IPTABLES -A OUTPUT -p udp -m udp --dport 67 -m state --state NEW -j ACCEPT
$IPTABLES -A OUTPUT -p tcp -m tcp --dport 67 -m state --state NEW -j ACCEPT
{% endif %}
# NTP
$IPTABLES -A OUTPUT -p udp -m udp --dport 123 -m state --state NEW -j ACCEPT
# ICMP
$IPTABLES -A OUTPUT -p icmp --icmp-type echo-request -j ACCEPT
# Traceroutes
$IPTABLES -A OUTPUT -p udp --dport 33434:33626 -j ACCEPT

{% if fw_iptables_extra_outbound_rules | default([]) | length > 0 %}
log_info "IPTABLES - Extra OUTBOUND Rules"
{% for line in fw_iptables_extra_outbound_rules %}
$IPTABLES {{ line }}
{% endfor %}
{% endif %}

## Output rules from localhost
# IPTABLES OUTBOUND interprocess CHAIN
$IPTABLES -A OUTPUT -o lo -j LO-OUTPUT-LO

## Default OUTPUT log rule
$IPTABLES -A OUTPUT -o '!lo' -j LOG --log-prefix "DROP " --log-ip-options --log-tcp-options
##############################
log_info "IPTABLES - Inbound rules for this machine"

{% if fw_office_net_enabled %}
log_info "IPTABLES - INPUT rules from OFFICE net"
{% if fw_dns_server %}
$IPTABLES -A INPUT -p tcp -i $OFFICE_NET_IF -s $OFFICE_NET_CIDR --dport 53 --syn -m state --state NEW -j ACCEPT
$IPTABLES -A INPUT -p udp -i $OFFICE_NET_IF -s $OFFICE_NET_CIDR --dport 53 -m state --state NEW -j ACCEPT
{% endif %}
{% if fw_office_net_dhcp %}
$IPTABLES -A INPUT -p udp -i $OFFICE_NET_IF -s $OFFICE_NET_CIDR --dport 67 -m state --state NEW -j ACCEPT
{% endif %}
$IPTABLES -A INPUT -p icmp -i $OFFICE_NET_IF -s $OFFICE_NET_CIDR --icmp-type echo-request -j ACCEPT
{% if fw_net_allow_traceroutes | default(true) %}
$IPTABLES -A INPUT -p udp -i $OFFICE_NET_IF -s $OFFICE_NET_CIDR --dport 33434:33626 -j REJECT
{% endif %}
{% endif %}

{% if fw_office_net_enabled %}
log_info "IPTABLES - INPUT rules from FAMILY net"
{% if fw_dns_server %}
$IPTABLES -A INPUT -p tcp -i $FAMILY_NET_IF -s $FAMILY_NET_CIDR --dport 53 --syn -m state --state NEW -j ACCEPT
$IPTABLES -A INPUT -p udp -i $FAMILY_NET_IF -s $FAMILY_NET_CIDR --dport 53 -m state --state NEW -j ACCEPT
{% endif %}
{% if fw_office_net_dhcp %}
$IPTABLES -A INPUT -p udp -i $FAMILY_NET_IF -s $FAMILY_NET_CIDR --dport 67 -m state --state NEW -j ACCEPT
{% endif %}
$IPTABLES -A INPUT -p icmp -i $FAMILY_NET_IF -s $FAMILY_NET_CIDR --icmp-type echo-request -j ACCEPT
{% if fw_net_allow_traceroutes | default(true) %}
$IPTABLES -A INPUT -p udp -i $FAMILY_NET_IF -s $FAMILY_NET_CIDR --dport 33434:33626 -j REJECT
{% endif %}
{% endif %}

{% if fw_office_net_enabled %}
log_info "IPTABLES - INPUT rules from SERVER net"
{% if fw_dns_server %}
$IPTABLES -A INPUT -p tcp -i $SERVER_NET_IF -s $SERVER_NET_CIDR --dport 53 --syn -m state --state NEW -j ACCEPT
$IPTABLES -A INPUT -p udp -i $SERVER_NET_IF -s $SERVER_NET_CIDR --dport 53 -m state --state NEW -j ACCEPT
{% endif %}
{% if fw_office_net_dhcp %}
$IPTABLES -A INPUT -p udp -i $SERVER_NET_IF -s $SERVER_NET_CIDR --dport 67 -m state --state NEW -j ACCEPT
{% endif %}
$IPTABLES -A INPUT -p icmp -i $SERVER_NET_IF -s $SERVER_NET_CIDR --icmp-type echo-request -j ACCEPT
{% if fw_net_allow_traceroutes | default(true) %}
$IPTABLES -A INPUT -p udp -i $SERVER_NET_IF -s $SERVER_NET_CIDR --dport 33434:33626 -j REJECT
{% endif %}
{% endif %}

{% if fw_office_net_enabled %}
log_info "IPTABLES - INPUT rules from DMZ net"
{% if fw_dns_server %}
$IPTABLES -A INPUT -p tcp -i $DMZ_NET_IF -s $DMZ_NET_CIDR --dport 53 --syn -m state --state NEW -j ACCEPT
$IPTABLES -A INPUT -p udp -i $DMZ_NET_IF -s $DMZ_NET_CIDR --dport 53 -m state --state NEW -j ACCEPT
{% endif %}
$IPTABLES -A INPUT -p icmp -i $DMZ_NET_IF -s $DMZ_NET_CIDR --icmp-type echo-request -j ACCEPT
{% if fw_net_allow_traceroutes | default(true) %}
$IPTABLES -A INPUT -p udp -i $DMZ_NET_IF -s $DMZ_NET_CIDR --dport 33434:33626 -j REJECT
{% endif %}
{% endif %}

{% if fw_iptables_extra_inbound_rules | default([]) | length > 0 %}
log_info "IPTABLES - Extra INPUT Rules"
{% for line in fw_iptables_extra_inbound_rules %}
$IPTABLES {{ line }}
{% endfor %}
{% endif %}

{% if fw_ipset_iblock_blocklists | default([]) | length > 0 %}
{% for list in fw_ipset_iblock_blocklists %}
log_info "IPTABLES - IPSET {{ list.name }} INPUT Rules"
$IPTABLES -A INPUT -m set --match-set {{ list.name }} src -j DROP
{% endfor %}
{% endif %}

## Input rules from localhost
$IPTABLES -A INPUT -i lo -j LO-INPUT-LO

## Log drops
$IPTABLES -A INPUT -i '!lo' -j LOG --log-prefix "DROP " --log-ip-options --log-tcp-options
##############################
log_info "IPTABLES - Anti-Spoofing rules"
## Anti-spoofing rules

{% if fw_family_net_enabled %}
$IPTABLES -A FORWARD -i $FAMILY_NET_IF ! -s $FAMILY_NET_CIDR -j LOG --log-prefix "SPOOFED PKT FAMILY NET"
$IPTABLES -A FORWARD -i $FAMILY_NET_IF ! -s $FAMILY_NET_CIDR -j DROP
{% endif %}

{% if fw_office_net_enabled %}
$IPTABLES -A FORWARD -i $OFFICE_NET_IF ! -s $OFFICE_NET_CIDR -j LOG --log-prefix "SPOOFED PKT OFFICE NET"
$IPTABLES -A FORWARD -i $OFFICE_NET_IF ! -s $OFFICE_NET_CIDR -j DROP
{% endif %}

{% if fw_server_net_enabled %}
$IPTABLES -A FORWARD -i $SERVER_NET_IF ! -s $SERVER_NET_CIDR -j LOG --log-prefix "SPOOFED PKT SERVER NET"
$IPTABLES -A FORWARD -i $SERVER_NET_IF ! -s $SERVER_NET_CIDR -j DROP
{% endif %}

{% if fw_dmz_net_enabled %}
$IPTABLES -A FORWARD -i $DMZ_NET_IF ! -s $DMZ_NET_CIDR -j LOG --log-prefix "SPOOFED PKT DMZ NET"
$IPTABLES -A FORWARD -i $DMZ_NET_IF ! -s $DMZ_NET_CIDR -j DROP
{% endif %}

{% if fw_family_net_enabled %}
##############################
# Family forwarding rules to WAN
$IPTABLES -N FAMILY_NET_FORWARD
$IPTABLES -A FAMILY_NET_FORWARD -p tcp --dport 21 -m conntrack --ctstate NEW -j ACCEPT
$IPTABLES -A FAMILY_NET_FORWARD -p tcp --dport 22 -m conntrack --ctstate NEW -j ACCEPT
$IPTABLES -A FAMILY_NET_FORWARD -p tcp --dport 25 -m conntrack --ctstate NEW -j ACCEPT
$IPTABLES -A FAMILY_NET_FORWARD -p tcp --dport 80 -m conntrack --ctstate NEW -j ACCEPT
$IPTABLES -A FAMILY_NET_FORWARD -p tcp --dport 443 -m conntrack --ctstate NEW -j ACCEPT
$IPTABLES -A FAMILY_NET_FORWARD -p tcp --dport 8443 -m conntrack --ctstate NEW -j ACCEPT
$IPTABLES -A FAMILY_NET_FORWARD -p tcp --dport 8080 -m conntrack --ctstate NEW -j ACCEPT
$IPTABLES -A FAMILY_NET_FORWARD -p tcp --dport 43 -m conntrack --ctstate NEW -j ACCEPT
$IPTABLES -A FAMILY_NET_FORWARD -p tcp --dport 4321 -m conntrack --ctstate NEW -j ACCEPT
$IPTABLES -A FAMILY_NET_FORWARD -p tcp --dport 53 -m conntrack --ctstate NEW -j ACCEPT
$IPTABLES -A FAMILY_NET_FORWARD -p udp --dport 53 -m conntrack --ctstate NEW -j ACCEPT
$IPTABLES -A FAMILY_NET_FORWARD -p udp --dport 123 -m conntrack --ctstate NEW -j ACCEPT

# Enable traceroute UDP traffic to pass through to WAN
$IPTABLES -A FAMILY_NET_FORWARD -p icmp --icmp-type echo-request -j ACCEPT
$IPTABLES -A FAMILY_NET_FORWARD -p udp --dport 33434:33626 -j ACCEPT

$IPTABLES -A FORWARD -i $FAMILY_NET_IF -s $FAMILY_NET_CIDR -o $WAN_IF -j FAMILY_NET_FORWARD
{% if fw_wan_if2 != "" %}
$IPTABLES -A FORWARD -i $FAMILY_NET_IF -s $FAMILY_NET_CIDR -o $WAN_IF2 -j FAMILY_NET_FORWARD
{% endif %}
{% endif %}

{% if fw_office_net_enabled %}
##############################
log_info "IPTABLES - Forwarding Rules - OFFICE Net --> WAN"
# Office forwarding rules to WAN
$IPTABLES -N OFFICE_NET_FORWARD
$IPTABLES -A OFFICE_NET_FORWARD -p tcp --dport 21 -m conntrack --ctstate NEW -j ACCEPT
$IPTABLES -A OFFICE_NET_FORWARD -p tcp --dport 22 -m conntrack --ctstate NEW -j ACCEPT
$IPTABLES -A OFFICE_NET_FORWARD -p tcp --dport 25 -m conntrack --ctstate NEW -j ACCEPT
$IPTABLES -A OFFICE_NET_FORWARD -p tcp --dport 43 -m conntrack --ctstate NEW -j ACCEPT
$IPTABLES -A OFFICE_NET_FORWARD -p tcp --dport 80 -m conntrack --ctstate NEW -j ACCEPT
$IPTABLES -A OFFICE_NET_FORWARD -p tcp --dport 443 -m conntrack --ctstate NEW -j ACCEPT
$IPTABLES -A OFFICE_NET_FORWARD -p tcp --dport 8080 -m conntrack --ctstate NEW -j ACCEPT
$IPTABLES -A OFFICE_NET_FORWARD -p tcp --dport 8443 -m conntrack --ctstate NEW -j ACCEPT
$IPTABLES -A OFFICE_NET_FORWARD -p tcp --dport 4321 -m conntrack --ctstate NEW -j ACCEPT
$IPTABLES -A OFFICE_NET_FORWARD -p tcp --dport 53 -m conntrack --ctstate NEW -j ACCEPT
$IPTABLES -A OFFICE_NET_FORWARD -p udp --dport 53 -m conntrack --ctstate NEW -j ACCEPT
$IPTABLES -A OFFICE_NET_FORWARD -p udp --dport 123 -m conntrack --ctstate NEW -j ACCEPT
 
# Enable traceroute UDP traffic to pass through to WAN
$IPTABLES -A OFFICE_NET_FORWARD -p icmp --icmp-type echo-request -j ACCEPT
$IPTABLES -A OFFICE_NET_FORWARD -p udp --dport 33434:33626 -j ACCEPT
  
$IPTABLES -A FORWARD -i $OFFICE_NET_IF -s $OFFICE_NET_CIDR -o $WAN_IF -j OFFICE_NET_FORWARD
{% if fw_wan_if2 != "" %}
$IPTABLES -A FORWARD -i $OFFICE_NET_IF -s $OFFICE_NET_CIDR -o $WAN_IF2 -j OFFICE_NET_FORWARD
{% endif %}
{% endif %}

{% if fw_server_net_enabled %}
##############################
log_info "IPTABLES - Forwarding Rules - SERVER Net --> WAN"
# Server forwarding rules to WAN
$IPTABLES -N SERVER_NET_FORWARD
$IPTABLES -A SERVER_NET_FORWARD -p tcp --dport 21 -m conntrack --ctstate NEW -j ACCEPT
$IPTABLES -A SERVER_NET_FORWARD -p tcp --dport 22 -m conntrack --ctstate NEW -j ACCEPT
$IPTABLES -A SERVER_NET_FORWARD -p tcp --dport 25 -m conntrack --ctstate NEW -j ACCEPT
$IPTABLES -A SERVER_NET_FORWARD -p tcp --dport 43 -m conntrack --ctstate NEW -j ACCEPT
$IPTABLES -A SERVER_NET_FORWARD -p tcp --dport 80 -m conntrack --ctstate NEW -j ACCEPT
$IPTABLES -A SERVER_NET_FORWARD -p tcp --dport 443 -m conntrack --ctstate NEW -j ACCEPT
$IPTABLES -A SERVER_NET_FORWARD -p tcp --dport 8080 -m conntrack --ctstate NEW -j ACCEPT
$IPTABLES -A SERVER_NET_FORWARD -p tcp --dport 8443 -m conntrack --ctstate NEW -j ACCEPT
$IPTABLES -A SERVER_NET_FORWARD -p tcp --dport 4321 -m conntrack --ctstate NEW -j ACCEPT
$IPTABLES -A SERVER_NET_FORWARD -p tcp --dport 53 -m conntrack --ctstate NEW -j ACCEPT
$IPTABLES -A SERVER_NET_FORWARD -p udp --dport 53 -m conntrack --ctstate NEW -j ACCEPT
$IPTABLES -A SERVER_NET_FORWARD -p udp --dport 123 -m conntrack --ctstate NEW -j ACCEPT
  
# Enable traceroute UDP traffic to pass through to WAN
$IPTABLES -A SERVER_NET_FORWARD -p icmp --icmp-type echo-request -j ACCEPT
$IPTABLES -A SERVER_NET_FORWARD -p udp --dport 33434:33626 -j ACCEPT
  
$IPTABLES -A FORWARD -i $SERVER_NET_IF -s $SERVER_NET_CIDR -o $WAN_IF -j SERVER_NET_FORWARD
{% if fw_wan_if2 != "" %}
$IPTABLES -A FORWARD -i $OFFICE_NET_IF -s $OFFICE_NET_CIDR -o $WAN_IF2 -j OFFICE_NET_FORWARD
{% endif %}
{% endif %}

{% if fw_dmz_net_enabled %}
##############################
log_info "IPTABLES - Forwarding Rules - DMZ Net --> WAN"
# DMZ forwarding rules to WAN
$IPTABLES -N DMZ_NET_FORWARD
$IPTABLES -A DMZ_NET_FORWARD -p tcp --dport 21 -m conntrack --ctstate NEW -j ACCEPT
$IPTABLES -A DMZ_NET_FORWARD -p tcp --dport 22 -m conntrack --ctstate NEW -j ACCEPT
$IPTABLES -A DMZ_NET_FORWARD -p tcp --dport 25 -m conntrack --ctstate NEW -j ACCEPT
$IPTABLES -A DMZ_NET_FORWARD -p tcp --dport 43 -m conntrack --ctstate NEW -j ACCEPT
$IPTABLES -A DMZ_NET_FORWARD -p tcp --dport 80 -m conntrack --ctstate NEW -j ACCEPT
$IPTABLES -A DMZ_NET_FORWARD -p tcp --dport 443 -m conntrack --ctstate NEW -j ACCEPT
$IPTABLES -A DMZ_NET_FORWARD -p tcp --dport 8080 -m conntrack --ctstate NEW -j ACCEPT
$IPTABLES -A DMZ_NET_FORWARD -p tcp --dport 8443 -m conntrack --ctstate NEW -j ACCEPT
$IPTABLES -A DMZ_NET_FORWARD -p tcp --dport 4321 -m conntrack --ctstate NEW -j ACCEPT
$IPTABLES -A DMZ_NET_FORWARD -p tcp --dport 53 -m conntrack --ctstate NEW -j ACCEPT
$IPTABLES -A DMZ_NET_FORWARD -p udp --dport 53 -m conntrack --ctstate NEW -j ACCEPT
$IPTABLES -A DMZ_NET_FORWARD -p udp --dport 123 -m conntrack --ctstate NEW -j ACCEPT
 
# Enable traceroute UDP traffic to pass through to WAN
$IPTABLES -A DMZ_NET_FORWARD -p icmp --icmp-type echo-request -j ACCEPT
$IPTABLES -A DMZ_NET_FORWARD -p udp --dport 33434:33626 -j ACCEPT
  
$IPTABLES -A FORWARD -i $DMZ_NET_IF -s $DMZ_NET_CIDR -o $WAN_IF -j DMZ_NET_FORWARD
{% if fw_wan_if2 != "" %}
$IPTABLES -A FORWARD -i $DMZ_NET_IF -s $DMZ_NET_CIDR -o $WAN_IF2 -j DMZ_NET_FORWARD
{% endif %}
{% endif %}

{% if fw_server_net_enabled and fw_family_net_enabled %}
##############################
log_info "IPTABLES - Forwarding Rules - FAMILY Net --> SERVER Net"
$IPTABLES -N FAMILY_TO_SERVER_NET_FORWARD
$IPTABLES -A FAMILY_TO_SERVER_NET_FORWARD -p icmp --icmp-type echo-request -j ACCEPT
  
$IPTABLES -A FORWARD -i $FAMILY_NET_IF -s $FAMILY_NET_CIDR -o $SERVER_NET_IF -d $SERVER_NET_CIDR -j FAMILY_TO_SERVER_NET_FORWARD
  
log_info "IPTABLES - Forwarding Rules - SERVER Net --> FAMILY Net"
$IPTABLES -N SERVER_TO_FAMILY_NET_FORWARD
  
$IPTABLES -A FORWARD -i $SERVER_NET_IF -s $SERVER_NET_CIDR -o $FAMILY_NET_IF -d $FAMILY_NET_CIDR -j SERVER_TO_FAMILY_NET_FORWARD
{% endif %}

{% if fw_server_net_enabled and fw_office_net_enabled %}
##############################
log_info "IPTABLES - Forwarding Rules - SERVER Net --> OFFICE Net"
$IPTABLES -N SERVER_TO_OFFICE_NET_FORWARD
  
$IPTABLES -A FORWARD -i $SERVER_NET_IF -s $SERVER_NET_CIDR -o $OFFICE_NET_IF -d $OFFICE_NET_CIDR -j SERVER_TO_OFFICE_NET_FORWARD
  
log_info "IPTABLES - Forwarding Rules - OFFICE Net --> SERVER Net"
$IPTABLES -N OFFICE_TO_SERVER_NET_FORWARD
$IPTABLES -A OFFICE_TO_SERVER_NET_FORWARD -p icmp --icmp-type echo-request -j ACCEPT
  
$IPTABLES -A FORWARD -i $OFFICE_NET_IF -s $OFFICE_NET_CIDR -o $SERVER_NET_IF -d $SERVER_NET_CIDR -j OFFICE_TO_SERVER_NET_FORWARD
{% endif %}

{% if fw_family_net_enabled and fw_server_net_enabled and fw_printer_hosts | default([]) |length > 0 %}
##############################
log_info "IPTABLES - FORWARDING FAMILY_NET_FORWARD PRINTER rules"
$IPTABLES -N PRINTER-FAMILY-TO-SERVER
$IPTABLES -A FAMILY_TO_SERVER_NET_FORWARD -j PRINTER-FAMILY-TO-SERVER
{% for printer_ip in fw_printer_hosts %}
$IPTABLES -A PRINTER-FAMILY-TO-SERVER -p udp --dport 54925 -d {{ printer_ip.ip }} -i $FAMILY_NET_IF -s $FAMILY_NET_CIDR -j ACCEPT
$IPTABLES -A PRINTER-FAMILY-TO-SERVER -p udp --dport 137 -d {{ printer_ip.ip }} -i $FAMILY_NET_IF -s $FAMILY_NET_CIDR -j ACCEPT
$IPTABLES -A PRINTER-FAMILY-TO-SERVER -p tcp --dport 631  -d {{ printer_ip.ip }} -i $FAMILY_NET_IF -s $FAMILY_NET_CIDR -j ACCEPT
{% endfor %}
{% endif %}

{% if fw_office_net_enabled and fw_server_net_enabled and fw_printer_hosts | default([]) |length > 0 %}
##############################
log_info "IPTABLES - FORWARDING OFFICE_NET_FORWARD PRINTER rules"
$IPTABLES -N PRINTER-OFFICE-TO-SERVER
$IPTABLES -A OFFICE_TO_SERVER_NET_FORWARD -j PRINTER-OFFICE-TO-SERVER
{% for printer_ip in fw_printer_hosts %}
$IPTABLES -A PRINTER-OFFICE-TO-SERVER -p udp --dport 54925 -d {{ printer_ip.ip }} -i $OFFICE_NET_IF -s $OFFICE_NET_CIDR -j ACCEPT
$IPTABLES -A PRINTER-OFFICE-TO-SERVER -p udp --dport 137 -d {{ printer_ip.ip }} -i $OFFICE_NET_IF -s $OFFICE_NET_CIDR -j ACCEPT
$IPTABLES -A PRINTER-OFFICE-TO-SERVER -p tcp --dport 631  -d {{ printer_ip.ip }} -i $OFFICE_NET_IF -s $OFFICE_NET_CIDR -j ACCEPT
{% endfor %}
{% endif %}

{% if fw_iptables_extra_forward_rules | default([]) | length > 0 %}
##############################
log_info "IPTABLES - Extra FORWARD Rules"
{% for line in fw_iptables_extra_forward_rules %}
$IPTABLES {{ line }}
{% endfor %}
{% endif %}

{% if fw_family_net_enabled and fw_server_net_enabled and fw_server_net_services | default([]) |length > 0 %}
##############################
log_info "IPTABLES - FORWARDING SERVER NET Services to FAMILY rules"
{% for item in fw_server_net_services %}
$IPTABLES -A FAMILY_TO_SERVER_NET_FORWARD -p {{ item.protocol}} --dport {{ item.port }} -d {{ item.ip }} -i $FAMILY_NET_IF -s $FAMILY_NET_CIDR -j ACCEPT -m comment --comment "Server Net SVC: {{ item.name }}"
{% endfor %}
{% endif %}

{% if fw_family_net_enabled and fw_xbox_hosts | default([]) |length > 0 %}
##############################
log_info "IPTABLES - FORWARDING XBOX rules"
$IPTABLES -N XBOX-TO-WAN
$IPTABLES -A FAMILY_NET_FORWARD -j XBOX-TO-WAN
{% for host in fw_xbox_hosts %}
$IPTABLES -A XBOX-TO-WAN -p udp --dport 88 -s {{ host.ip }} -j ACCEPT
$IPTABLES -A XBOX-TO-WAN -p udp --dport 500 -s {{ host.ip }} -j ACCEPT
$IPTABLES -A XBOX-TO-WAN -p udp --dport 3074 -s {{ host.ip }} -j ACCEPT
$IPTABLES -A XBOX-TO-WAN -p tcp --dport 3074 -s {{ host.ip }} -j ACCEPT
$IPTABLES -A XBOX-TO-WAN -p udp --dport 3544 -s {{ host.ip }} -j ACCEPT
$IPTABLES -A XBOX-TO-WAN -p udp --dport 4500 -s {{ host.ip }} -j ACCEPT
{% endfor %}
{% endif %}

{% if fw_family_net_enabled and fw_chromecast_hosts | default([]) |length > 0 %}
##############################
log_info "IPTABLES - FORWARDING CHROMECAST rules"
$IPTABLES -N CHROMECAST-TO-WAN
$IPTABLES -A FAMILY_NET_FORWARD -j CHROMECAST-TO-WAN
{% for host in fw_chromecast_hosts %}
$IPTABLES -A CHROMECAST-TO-WAN -p tcp --dport 8008:8009 -s {{ host.ip }} -j ACCEPT
{% endfor %}
{% endif %}

{% if fw_tc_enabled | default(false) %}
##############################
log_info "Traffic Control Classify from POSTROUTING chain in mangle table"
$IPTABLES -t mangle -F POSTROUTING
$IPTABLES -t mangle -N TC_PRI5_HOSTS
$IPTABLES -t mangle -N TC_PRI4_HOSTS
$IPTABLES -t mangle -N TC_PRI3_HOSTS
$IPTABLES -t mangle -N TC_PRI2_HOSTS
$IPTABLES -t mangle -N TC_PRI1_HOSTS
$IPTABLES -t mangle -A POSTROUTING -m time --timestart 06:00 --timestop 18:00 --weekdays Mon,Tue,Wed,Thu,Fri -j TC_PRI4_HOSTS
$IPTABLES -t mangle -A POSTROUTING -m time --timestart 18:01 --timestop 22:00 --weekdays Mon,Tue,Wed,Thu,Fri -j TC_PRI3_HOSTS
{% if fw_family_net_enabled and fw_xbox_hosts | default([]) |length > 0 %}
log_info "Traffic Control Classify from POSTROUTING chain in mangle table - XBOX hosts"
{% for host in fw_xbox_hosts %}
$IPTABLES -t mangle -A TC_PRI4_HOSTS -o $FAMILY_NET_IF -d {{ host.ip }} -j CLASSIFY --set-class 1:14
$IPTABLES -t mangle -A TC_PRI3_HOSTS -o $FAMILY_NET_IF -d {{ host.ip }} -j CLASSIFY --set-class 1:13
{% endfor %}
{% endif %}
{% endif %}

##############################
log_info "IPTABLES - Save Changes to /etc/iptables/rules.v4"
bash -c "${IPTABLES_SAVE} > /etc/iptables/rules.v4"