#!/bin/bash
#############################
# Ip6tables Script for Firewall / Router / Gateway
# Generated by ansible
#############################
# Network Configurations
# WAN Configuration
export WAN_IF={{ fw_wan_if }}

{% if fw_office_net_enabled %}
# Office
export OFFICE_NET_IF={{ fw_office_if }}
{% endif %}

{% if fw_server_net_enabled %}
# Server
export SERVER_NET_IF={{ fw_server_if }}
{% endif %}

{% if fw_family_net_enabled %}
# Family / Guest
export FAMILY_NET_IF={{ fw_family_if }}
{% endif %}

{% if fw_dmz_net_enabled %}
# DMZ
export DMZ_NET_IF={{ fw_dmz_if }}
{% endif %}

# Commands
export MODPROBE=/usr/sbin/modprobe
export IP6TABLES=/usr/sbin/ip6tables
export IP6TABLES_SAVE=/usr/sbin/ip6tables-save

#############################
# Color definitions for output
GREEN=`tput setaf 2`
YELLOW=`tput setaf 3`
RESET=`tput sgr0`

log_info() {
  echo -e "$GREEN[INFO]: $@ $RESET"
}

log_warning() {
  echo -e "$YELLOW[WARN]: $@ $RESET"
}


#############################
log_info "Kernel mods for firewalling"
# load connection-tracking modules
$MODPROBE ip_conntrack
$MODPROBE iptable_nat

#############################
log_warning "IP6TABLES - temporary configure default ACCEPT on tables and flush"

# Temporary open up
$IP6TABLES -P INPUT ACCEPT
$IP6TABLES -P OUTPUT ACCEPT
$IP6TABLES -P FORWARD ACCEPT

$IP6TABLES --flush            # Flush all the rules in filter and nat tables
$IP6TABLES --table nat --flush
$IP6TABLES --table mangle --flush
$IP6TABLES -X

#############################
log_info "IP6TABLES - Configure dfault DROP"
$IP6TABLES -P INPUT DROP
$IP6TABLES -P OUTPUT DROP
$IP6TABLES -P FORWARD DROP

##############################
#log_info "IP6TABLES - Outbound rules for this machine"
#### ACCEPT rules for allowing connections out (from local)
# SSH
$IP6TABLES -A OUTPUT -p tcp --dport 22 --syn -m state --state NEW -j ACCEPT
{% if fw_outbound_ftp | default(true) %}
# FTP
$IP6TABLES -A OUTPUT -p tcp --dport 21 --syn -m state --state NEW -j ACCEPT
{% endif %}
{% if fw_outbound_smtp | default(true) %}
# SMTP
$IP6TABLES -A OUTPUT -p tcp --dport 25 --syn -m state --state NEW -j ACCEPT
{% endif %}
{% if fw_outbound_http | default(true) %}
# Http Queries
$IP6TABLES -A OUTPUT -p tcp --dport 80 --syn -m state --state NEW -j ACCEPT
$IP6TABLES -A OUTPUT -p tcp --dport 8080 --syn -m state --state NEW -j ACCEPT
$IP6TABLES -A OUTPUT -p tcp --dport 443 --syn -m state --state NEW -j ACCEPT
$IP6TABLES -A OUTPUT -p tcp --dport 8443 --syn -m state --state NEW -j ACCEPT
{% endif %}
{% if fw_outbound_dns | default(true) %}
# Whois Lookups...
$IP6TABLES -A OUTPUT -p tcp --dport 43 --syn -m state --state NEW -j ACCEPT
$IP6TABLES -A OUTPUT -p tcp --dport 4321 --syn -m state --state NEW -j ACCEPT
# DNS Queries...
$IP6TABLES -A OUTPUT -p udp -m udp --dport 53 -m state --state NEW -j ACCEPT
$IP6TABLES -A OUTPUT -p tcp -m tcp --dport 53 -m state --state NEW -j ACCEPT
{% endif %}
{% if fw_outbound_dhcp | default(true) %}
# DHCP Queries...
$IP6TABLES -A OUTPUT -p udp -m udp --dport 67 -m state --state NEW -j ACCEPT
$IP6TABLES -A OUTPUT -p tcp -m tcp --dport 67 -m state --state NEW -j ACCEPT
{% endif %}
# ICMP
$IP6TABLES -A OUTPUT -p icmpv6 --icmpv6-type echo-request -j ACCEPT
# Traceroutes
$IP6TABLES -A OUTPUT -p udp --dport 33434:33626 -j ACCEPT

## Default OUTPUT log rule
$IP6TABLES -A OUTPUT -o '!lo' -j LOG --log-prefix "DROP " --log-ip-options --log-tcp-options
##############################
log_info "IP6TABLES - Inbound rules for this machine"

## Log drops
$IP6TABLES -A INPUT -i '!lo' -j LOG --log-prefix "DROP " --log-ip-options --log-tcp-options
##############################
log_info "IP6TABLES - Save Changes to /etc/iptables/rules.v6"
bash -c "${IP6TABLES_SAVE} > /etc/iptables/rules.v6"