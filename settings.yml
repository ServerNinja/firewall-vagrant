---
######## Begin Node Definition ########
### Define the nodes by their node name, IP, and Role (firewall or client).
# Additional options shown below...

# Use Ansible provisioning to configure nodes?
ansible_provisioning: true

# Vagrant box - this can have an override at node level
vagrant_box: "bento/ubuntu-20.04"
vagrant_guest_os: "ubuntu"

node_info:
  firewall1:
      vagrant_box: "bento/debian-11.1" # AppArmor sucks and SELinux breaks debian - WTF?!?!
      vagrant_guest_os: "debian"
      memory: 1024       # <=== Default to 1024 if not defined
      cpus: 1            # <=== Default to 1 if not defined
      role: firewall
      networks:
        - name: vboxnet1      # Internet Connection #2
          mode: bridge
          net_bridge_order:
          - "en0: Wi-Fi (Wireless)"
        - name: vboxnet2      # Office Network
          mode: private
          ip: 192.168.56.254
        - name: vboxnet3      # Server Network
          mode: private
          ip: 192.168.57.254
        - name: vboxnet4      # Family network
          mode: private
          ip: 192.168.58.254
  office1: # On Office Network
      memory: 1024
      cpus: 1
      role: client 
      networks:
        - name: vboxnet2
          mode: private
          ip: 192.168.56.100
          netmask: 255.255.255.0
          default_router: 192.168.56.254
          nameservers: "[ 8.8.8.8, 8.8.4.4 ]"
  server1: # On Server Network
      memory: 1024
      cpus: 1
      role: client
      networks:
        - name: vboxnet3
          mode: private
          ip: 192.168.57.100
          netmask: 255.255.255.0
          default_router: 192.168.57.254
          nameservers: "[ 8.8.8.8, 8.8.4.4 ]"
  family1: # On Family Network
      memory: 1024
      cpus: 1
      role: client 
      networks:
        - name: vboxnet4
          mode: private
          ip: 192.168.58.100
          netmask: 255.255.255.0
          default_router: 192.168.58.254
          nameservers: "[ 8.8.8.8, 8.8.4.4 ]"

ansible_settings:
  fw_role_internet_gateway: true
  fw_wan_if: eth0
  fw_wan_if2: eth1
  fw_office_if: eth2
  fw_server_if: eth3
  fw_family_if: eth4
  fw_tc_enabled: false
  fw_office_net_enabled: true
  fw_server_net_enabled: true
  fw_family_net_enabled: true
  fw_ssh_from_wan_net_enabled: true
  fw_dhcp_server: true
  fw_dns_server: true
  fw_dynamic_dns: true
  fw_iptables_enabled: true
  fw_ipset_enabled: true
  fw_nat_enabled: true
  fw_network_internal_domain: reedfamilyninjas.local
  fw_xbox_hosts:
  - name: XBox Wired
    hostname: xbox-wired
    mac: 2C:54:91:CD:5C:19
    ip: 192.168.58.49
  - name: XBox Wireless
    hostname: xbox-wireless
    mac: 2C:54:91:CD:5C:1B
    ip: 192.168.58.48
  fw_chromecast_hosts:
  - name: Upstairs Chromecast
    hostname: chromecast-upstairs
    mac: 3C:8D:20:02:30:DB
    ip: 192.168.58.47
  fw_firetv_hosts:
  - name: Master Bedroom FireTV
    hostname: firetv-master-bed
    mac: A0:D0:DC:60:9C:22
    ip: 192.168.58.46
  fw_printer_hosts:
  - name: Office Brother Printer
    hostname: brother-mfc
    mac: AC:D1:B8:79:6D:34
    ip: 192.168.57.49
  fw_server_net_services:
  - name: Minecraft Bedrock
    ip: 192.168.1.45
    port: 19132
    protocol: tcp

######## End Node Definition ########